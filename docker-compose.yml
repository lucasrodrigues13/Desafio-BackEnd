version: '3.8'

services:
  database:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "12345"
      POSTGRES_DB: MotorRentalDb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrations:
    container_name: service-migrations
    image: service-migrations
    build:
      context: .
      dockerfile: src/MotorRental.WebApi/Dockerfile
      target: migrations
    environment:
      - ASPNETCORE_ENVIRONMENT=Compose
      - ConnectionStrings__DefaultConnection=Host=database;Port=5432;Database=MotorRentalDb;Username=postgres;Password=12345
    depends_on:
      database:
        condition: service_healthy 

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  webapi:
    image: motorrental.webapi:latest
    build:
      context: .
      dockerfile: src/MotorRental.WebApi/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Compose
      - RabbitMQ__HostName=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      database:
        condition: service_healthy 

  worker:
    image: motorrental.worker:latest
    build:
      context: .
      dockerfile: src/MotorRental.Workers/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Compose
      - RabbitMQ__HostName=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      database: 
        condition: service_healthy 

volumes:
  postgres-data: